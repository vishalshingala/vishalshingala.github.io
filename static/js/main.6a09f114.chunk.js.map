{"version":3,"sources":["logo.svg","component/UserCard.js","component/GoogleLogin.js","App.js","reportWebVitals.js","index.js"],"names":["UserCard","props","user","name","src","profileImg","alt","clientId","GoogleLogin","useState","setUser","gapi","load","useEffect","a","loadAuth2","auth2","isSignedIn","get","updateUser","currentUser","attachSignin","document","getElementById","setAuth2","getBasicProfile","getName","getImageUrl","client","drive","files","list","pageSize","fields","q","then","response","res","JSON","parse","body","console","log","element","attachClickHandler","googleUser","error","stringify","className","id","onClick","getAuthInstance","signOut","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0NAAe,I,iDCEFA,EAAW,SAACC,GACvB,OACE,gCACE,6BAAKA,EAAMC,KAAKC,OAChB,qBAAKC,IAAKH,EAAMC,KAAKG,WAAYC,IAAI,qBCDrCC,G,MACJ,4EACWC,EAAe,WAC1B,MAAwBC,mBAAS,MAAjC,mBAAOP,EAAP,KAAaQ,EAAb,KACAC,IAAKC,KAAK,gBACVC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACKC,YAAUJ,IAAMJ,EAAU,IAD/B,QACTS,EADS,QAELC,WAAWC,MACjBC,EAAWH,EAAMI,YAAYF,OAE7BG,EAAaC,SAASC,eAAe,aAAcP,GALxC,2CAAH,qDAQdQ,KACC,IAEHX,qBAAU,WACHX,GACW,uCAAG,4BAAAY,EAAA,sEACKC,YAAUJ,IAAMJ,EAAU,IAD/B,OACTS,EADS,OAEfK,EAAaC,SAASC,eAAe,aAAcP,GAFpC,2CAAH,oDAIdQ,KAED,CAACtB,IAEJ,IAAMiB,EAAa,SAACC,GAClB,IAAMjB,EAAOiB,EAAYK,kBAAkBC,UACrCrB,EAAae,EAAYK,kBAAkBE,cACjDjB,EAAQ,CACNP,KAAMA,EACNE,WAAYA,IAGdM,IAAKiB,OAAOC,MAAMC,MACfC,KAAK,CACJC,SAAU,GACVC,OAAQ,yDACRC,EAAG,OAEJC,MAAK,SAAUC,GACd,IAAMC,EAAMC,KAAKC,MAAMH,EAASI,MAChCC,QAAQC,IAAIL,OAKZhB,EAAe,SAACsB,EAAS3B,GAC7BA,EAAM4B,mBAAmBD,EAAS,IAChC,SAACE,GACC1B,EAAW0B,MACV,SAACC,GACJL,QAAQC,IAAIJ,KAAKS,UAAUD,QAY/B,OAAG5C,EAEC,sBAAK8C,UAAU,YAAf,UACE,cAAC,EAAD,CAAU9C,KAAMA,IAChB,qBAAK+C,GAAG,GAAGD,UAAU,aAAaE,QAZxB,WACAvC,IAAKK,MAAMmC,kBACnBC,UAAUjB,MAAK,WACnBzB,EAAQ,MACR+B,QAAQC,IAAI,wBAQV,uBAQJ,qBAAKM,UAAU,YAAf,SACE,qBAAKC,GAAG,YAAYD,UAAU,YAA9B,sBCxESK,MARf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCMSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1C,SAASC,eAAe,SAM1B+B,M","file":"static/js/main.6a09f114.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n\r\nexport const UserCard = (props) => {\r\n  return (\r\n    <div>\r\n      <h2>{props.user.name}</h2>\r\n      <img src={props.user.profileImg} alt=\"user profile\" />\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { gapi, loadAuth2 } from 'gapi-script'\r\n\r\nimport { UserCard } from './UserCard';\r\nimport './GoogleLogin.css';\r\nconst clientId =\r\n  '326211121091-fqkq6e0cm4fp9gfg08r7rnvnu99sd6nv.apps.googleusercontent.com';\r\nexport const GoogleLogin  = () => {\r\n  const [user, setUser] = useState(null);\r\n  gapi.load('client:auth2');\r\n  useEffect(() => {\r\n    const setAuth2 = async () => {\r\n      const auth2 = await loadAuth2(gapi, clientId, '')\r\n      if (auth2.isSignedIn.get()) {\r\n          updateUser(auth2.currentUser.get())\r\n      } else {\r\n          attachSignin(document.getElementById('customBtn'), auth2);\r\n      }\r\n    }\r\n    setAuth2();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const setAuth2 = async () => {\r\n        const auth2 = await loadAuth2(gapi, clientId, '')\r\n        attachSignin(document.getElementById('customBtn'), auth2);\r\n      }\r\n      setAuth2();\r\n    }\r\n  }, [user])\r\n\r\n  const updateUser = (currentUser) => {\r\n    const name = currentUser.getBasicProfile().getName();\r\n    const profileImg = currentUser.getBasicProfile().getImageUrl();\r\n    setUser({\r\n      name: name,\r\n      profileImg: profileImg,\r\n    });\r\n\r\n    gapi.client.drive.files\r\n      .list({\r\n        pageSize: 10,\r\n        fields: 'nextPageToken, files(id, name, mimeType, modifiedTime)',\r\n        q: null,\r\n      })\r\n      .then(function (response) {\r\n        const res = JSON.parse(response.body);\r\n        console.log(res);\r\n      });\r\n\r\n  };\r\n\r\n  const attachSignin = (element, auth2) => {    \r\n    auth2.attachClickHandler(element, {},\r\n      (googleUser) => {\r\n        updateUser(googleUser);\r\n      }, (error) => {\r\n      console.log(JSON.stringify(error))\r\n    });\r\n  };\r\n\r\n  const signOut = () => {\r\n    const auth2 = gapi.auth2.getAuthInstance();\r\n    auth2.signOut().then(() => {\r\n      setUser(null);\r\n      console.log('User signed out.');\r\n    });\r\n  }\r\n\r\n  if(user) {\r\n    return (\r\n      <div className=\"container\">\r\n        <UserCard user={user} />\r\n        <div id=\"\" className=\"btn logout\" onClick={signOut}>\r\n          Logout\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div id=\"customBtn\" className=\"btn login\">\r\n        Login\r\n      </div>\r\n    </div>\r\n  );\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport {GoogleLogin} from './component/GoogleLogin'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GoogleLogin/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}